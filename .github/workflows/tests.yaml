name: Tests
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  ruff:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with: 
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - run: uv run ruff check src/ tests/ docs/source/ examples/ dev/
  mypy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with: 
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - run: uv run mypy src/ tests/ docs/source/ examples/ dev/
  ruff-format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with: 
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - run: uv run ruff format --check src/ tests/ docs/source/ examples/ dev/
  pytest:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: lukasturcani/nomad-server
          path: nomad-server
          ref: lukas/open-api
      - uses: docker/setup-buildx-action@v3
      - run: docker-compose -f nomad-server/nomad-rest-api up -d
      - uses: astral-sh/setup-uv@v3
        with: 
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - run: uv run pytest --cov=src --cov-report term-missing
  doctest:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with: 
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - run: uv run make -C docs doctest
